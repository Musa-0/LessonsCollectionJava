package com.test.collections;

import java.util.HashSet;
import java.util.Set;

public class SetEx {
    //это множество и его структура такая же как и у HashMap но ключ в словаре это и есть значения в set и оно уникально. его методы самые быстрые
    // то есть HashSet словарь который не имеет значений а лишь ключи
    public static void main(String[] args) {
        Set<String> set = new HashSet<>();
        set.add("Musa");//вызывает метод put передавая ключ Musa а значение по умолчанию
        set.add("Mama");
        set.add("Amina");
        set.add("Musa");//добавления не будет

        System.out.println(set);//вывод будет в разнобой

//        boolean remove(Object o) Удаляет указанный элемент из этого набора, если он присутствует (необязательная операция).
//
//        boolean removeAll(Collection c) Удаляет из этого набора все его элементы, которые содержатся в указанной коллекции (необязательная операция).
//
//        boolean retainAll(Collection c) Сохраняет только те элементы в этом наборе, которые содержатся в указанной коллекции (необязательная операция).
//
//        void clear(). Удаляет все элементы из набора.
//
//        Iterator iterator(). Возвращает итератор по элементам в этом наборе.
//
//        int size(). он используется для получения количества элементов в наборе.
//
//        boolean isEmpty(). чтобы проверить, является ли Set пустым или нет.
//
//        boolean contains(Object o). Возвращает true, если этот набор содержит указанный элемент.
//
//        Object[] toArray() Объект[] toArray(). Возвращает массив, содержащий все элементы в этом наборе.
//        Если этот набор дает какие-либо гарантии относительно того, в каком порядке его элементы возвращаются
//        его итератором, этот метод должен возвращать элементы в том же порядке.
    }
}
